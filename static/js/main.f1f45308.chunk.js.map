{"version":3,"sources":["contexts/GameContext.tsx","components/game/Map.tsx","components/game/BluetoothButton.tsx","images/start.svg","images/left-rotate.svg","images/right-rotate.svg","images/go.svg","components/card/Card.tsx","components/card/DraggableCard.tsx","images/play.svg","components/card/SortableCard.tsx","components/card/CardList.tsx","components/game/QueueControl.tsx","components/game/Control.tsx","components/game/CustomDragLayer.tsx","components/Game.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["windowNavigator","navigator","GameContext","React","createContext","GameContextProvider","children","useState","page","setPage","queue","setQueue","bluetoothConnect","setBluetoothConnect","Infinity","draggingIndex","setDraggingIndex","tempQueue","useMemo","find","x","temp","reSortSetQueue","useCallback","currentIndex","reduce","acc","val","type","index","addQueue","length","undefined","updateQueue","payload","map","deleteQueue","filter","deleteNextQueue","replaceQueue","droppingIndex","movingQueue","putIndex","_","findIndex","changeQueue","setBluetoothDevice","bluetooth","requestDevice","filters","services","then","device","gatt","connect","server","getPrimaryService","service","getCharacteristic","characteristic","data","Uint8Array","writeValue","catch","error","console","changeDraggingIndex","Provider","value","changePage","MapWrapper","styled","div","Map","Button","button","props","BluetoothButton","useContext","onClick","className","Item","forwardRef","ref","src","startImg","alt","goImg","leftRotateImg","rightRotateImg","DraggableCard","useDrag","item","collect","monitor","isDragging","drag","preview","useEffect","getEmptyImage","captureDraggingState","SortableCard","withDragging","moveCard","dropCard","updateCard","useRef","useDrop","accept","drop","hover","dragIndex","hoverIndex","current","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","sort","begin","end","opacity","style","Wrapper","SortCardList","cards","k","position","CardList","left","QueueForm","QueueWrapper","Queue","PlayBtn","PlayBtnWrapper","pushing","QueueControl","setPushing","hovered","isOver","getItem","addingCard","onTouchStart","onTouchEnd","playImg","QueueControlWrapper","ItemWrapper","usingCards","Control","card","layerStyles","pointerEvents","zIndex","width","height","getItemStyles","initialOffset","currentOffset","isSnapToGrid","display","transform","WebkitTransform","CustomDragLayer","useDragLayer","itemType","getItemType","getInitialSourceClientOffset","getSourceClientOffset","snapToGrid","renderItem","ControlWrapper","StatusBar","GamePlay","MapEdit","Game","DndProvider","backend","TouchBackend","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","log"],"mappings":"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","file":"static/js/main.f1f45308.chunk.js","sourcesContent":["import _ from 'lodash'\nimport React from 'react'\nimport { card, cardType } from '../types/card'\n\n// eslint-disable-next-line @typescript-eslint/no-use-before-define\nconst windowNavigator: any = navigator\n\ntype pageT = 'mapEdit' | 'game'\n\ninterface valueT {\n  page: pageT\n  queue: Array<card>\n  tempQueue: card | undefined\n  bluetoothConnect: boolean\n  draggingIndex: number\n\n  changePage: (page: pageT) => void\n\n  addQueue: (type: cardType, temp?: boolean) => void\n  updateQueue: (index: number, payload: card) => void\n  deleteQueue: (index: number) => void\n  deleteNextQueue: (index: number) => void\n  replaceQueue: (index1: number, index2: number) => void\n  reSortSetQueue: (queue: Array<card>) => void\n\n  setBluetoothDevice: () => void\n\n  changeDraggingIndex: (index: number) => void\n}\n\nconst GameContext = React.createContext({} as valueT)\n\nexport default GameContext\n\nexport function GameContextProvider({ children }: React.PropsWithChildren<{}>) {\n  const [page, setPage] = React.useState<pageT>(\"mapEdit\")\n  const [queue, setQueue] = React.useState<Array<card>>([])\n  const [bluetoothConnect, setBluetoothConnect] = React.useState(false)\n  const [draggingIndex, setDraggingIndex] = React.useState(Infinity)\n\n  const tempQueue = React.useMemo(() => (\n    queue.find(x => x.temp === true)\n  ), [queue])\n\n  const reSortSetQueue = React.useCallback((queue: Array<card>) => {\n    let currentIndex = 0;\n\n    setQueue(\n      queue.reduce((acc, val) => (\n        [...acc, {\n          type: val.type,\n          index: currentIndex++,\n          temp: false,\n        }]\n      ), [] as Array<card>)\n    )\n  }, [])\n\n  const addQueue = React.useCallback((type: cardType, temp?: boolean) => {\n    setQueue(queue => ([\n      ...queue,\n      {\n        type,\n        index: queue.length,\n        temp: temp === undefined ? false : true\n      }\n    ]))\n  }, [])\n\n  const updateQueue = React.useCallback((index: number, payload: card) => {\n    setQueue(queue => (queue.map(x => x.index === index ? x : {\n      ...x,\n      ...payload\n    })))\n  }, [])\n\n  const deleteQueue = React.useCallback((index: number) => {\n    reSortSetQueue(queue.filter(val => val.index !== index))\n  }, [reSortSetQueue, queue])\n\n  const deleteNextQueue = React.useCallback((index: number) => {\n    reSortSetQueue(queue.filter(val => val.index < index))\n  }, [reSortSetQueue, queue])\n\n  const replaceQueue = React.useCallback((draggingIndex:number, droppingIndex:number) => {\n    const movingQueue = queue.filter(x => x.index >= draggingIndex);\n    const putIndex = _.findIndex(queue, ['index', droppingIndex])\n\n    let changeQueue = queue.reduce((acc, val, index) => {\n      if (putIndex === index) acc = [...acc, ...movingQueue]\n      if (val.index >= draggingIndex) return acc;\n\n      return [...acc, val]\n    }, [] as Array<card>)\n\n    if (putIndex === -1) changeQueue = [...changeQueue, ...movingQueue]\n\n    setQueue(changeQueue)\n  }, [queue])\n\n  const setBluetoothDevice = React.useCallback(() => {\n    windowNavigator.bluetooth.requestDevice({\n      filters: [{ services: [0xFFE0] }]\n    })\n      .then(function(device: any) {\n        return device.gatt.connect();\n      })\n      .then(function(server: any) {\n        return server.getPrimaryService(0xFFE0);\n      })\n      .then(function(service: any) {\n        return service.getCharacteristic(0xFFE1);\n      })\n      .then(function(characteristic: any) {\n        setBluetoothConnect(true)\n        \n        var data = new Uint8Array([0xbb, 0x25, 0x05, 0x44]);\n        return characteristic.writeValue(data);\n      })\n      .catch(function(error: any) {\n        console.error('Connection failed!', error);\n      });\n  }, [])\n\n  const changeDraggingIndex = React.useCallback((index: number) => {\n    setDraggingIndex(index)\n  }, [])\n\n  return (\n    <GameContext.Provider value={{\n      page,\n      queue,\n      tempQueue,\n      bluetoothConnect,\n      draggingIndex,\n\n      changePage: setPage,\n\n      addQueue,\n      updateQueue,\n      deleteQueue,\n      deleteNextQueue,\n      replaceQueue,\n      reSortSetQueue,\n\n      setBluetoothDevice,\n\n      changeDraggingIndex\n    }}>\n      {children}\n    </GameContext.Provider>\n  )\n}","import React from 'react'\nimport styled from 'styled-components'\n\nconst MapWrapper = styled.div`\n  width: 50%;\n  height: 80%;\n\n  border-radius: 2rem;\n  background: #999;\n  border: 1rem solid #fff;\n\n  padding-top: 1rem;\n\n  & > img {\n    width: auto;\n    height: 100%;\n  }\n`\n\nexport default function Map() {\n  return (\n    <MapWrapper>\n    </MapWrapper>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport GameContext from '../../contexts/GameContext'\n\nconst Button = styled.button<{ connect: boolean }>`\n  border: none;\n  background: none;\n\n  color: ${props => props.connect ? \"#0983fe\" : \"#000\"};\n  opacity: ${props => props.connect ? 1 : 0.2};\n\n  &:focus {\n    outline: none;\n  }\n`\n\nexport default function BluetoothButton() {\n  const { bluetoothConnect, setBluetoothDevice } = React.useContext(GameContext)\n  return (\n    <Button connect={bluetoothConnect} onClick={() => setBluetoothDevice()}>\n      <span className=\"material-icons\">bluetooth</span>\n    </Button>\n  )\n}","export default __webpack_public_path__ + \"static/media/start.6df7bebe.svg\";","export default __webpack_public_path__ + \"static/media/left-rotate.f9db7149.svg\";","export default __webpack_public_path__ + \"static/media/right-rotate.4443e6b6.svg\";","export default __webpack_public_path__ + \"static/media/go.b28a9fae.svg\";","import React from \"react\";\nimport styled from 'styled-components'\n\nimport startImg from '../../images/start.svg'\nimport leftRotateImg from '../../images/left-rotate.svg'\nimport rightRotateImg from '../../images/right-rotate.svg'\nimport goImg from '../../images/go.svg'\nimport { cardC } from \"../../types/card\";\n\nconst Item = styled.div`\n  position: relative;\n  width: 2.425rem;\n  height: 2.5rem;\n  font-size: 0;\n\n  img {\n    width: auto;\n    height: 100%;\n  }\n`\n\nexport default React.forwardRef(function Card({ type, ...props }: cardC, ref) {\n  return (\n    <Item {...props}>\n      {type === \"start\" && <img src={startImg} alt=\"시작 이미지\" />}\n      {type === \"go\" && <img src={goImg} alt=\"직진\"/>}\n      {type === \"left-rotate\" && <img src={leftRotateImg} alt=\"왼쪽으로 90도 회전\"/>}\n      {type === \"right-rotate\" && <img src={rightRotateImg} alt=\"오른쪽으로 90도 회전\"/>}\n    </Item>\n  )\n})","import React from 'react'\nimport { getEmptyImage } from 'react-dnd-html5-backend'\nimport { useDrag, DragSourceMonitor } from 'react-dnd'\n\nimport Card from './Card'\nimport { cardC } from '../../types/card'\n\ntype Props = {\n  val: number\n  begin?: () => void\n} & cardC \n\nexport default function DraggableCard({ type, val }: Props) {\n  const [{ isDragging }, drag, preview] = useDrag({\n    item: { type: \"card\", data: { type } },\n    collect: (monitor: DragSourceMonitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  })\n\n  React.useEffect(() => {\n    preview(getEmptyImage(), { captureDraggingState: true })\n  }, [])\n\n  return (\n    <div ref={drag}>\n      <Card type={type} />\n    </div>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/play.b9298dae.svg\";","import React from 'react'\nimport { getEmptyImage } from 'react-dnd-html5-backend'\nimport { useDrag, DragSourceMonitor, XYCoord, useDrop } from 'react-dnd'\n\nimport Card from './Card'\nimport { cardSortEvent, draggableCard, sortCardC } from '../../types/card'\n\n\nexport default function SortableCard({\n  type, index, withDragging , moveCard, changeDraggingIndex, dropCard, updateCard }: sortCardC & cardSortEvent) {\n  const ref = React.useRef<HTMLDivElement>(null);\n  const [, drop] = useDrop({\n    accept: [\"card\", \"sortCard\"],\n    drop() {\n      dropCard()\n    },\n    hover(item: draggableCard, monitor) {\n      const dragIndex = item.index;\n      const hoverIndex = index;\n        \n      if (item.type === \"sortCard\") {\n        if (!ref.current) {\n          return;\n        }\n        const hoverBoundingRect = ref.current?.getBoundingClientRect();\n        const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n        const clientOffset = monitor.getClientOffset();\n        const hoverClientY = (clientOffset as XYCoord).y - hoverBoundingRect.top;\n  \n        if (\n          (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) ||\n          (dragIndex > hoverIndex && hoverClientY > hoverMiddleY)\n        ) {\n          return;\n        }\n        \n        moveCard(dragIndex, hoverIndex)\n      } else if (item.type === \"card\") {\n        updateCard(hoverIndex);\n      }\n    }\n  });\n\n  const [{ isDragging }, drag, preview] = useDrag({\n    item: {\n      type: \"sortCard\",\n      index,\n      sort: true,\n      data: { type }\n    },\n    begin: (monitor: DragSourceMonitor) => {\n      changeDraggingIndex(index)\n    },\n    end: () => {\n      changeDraggingIndex(Infinity)\n    },\n    collect: (monitor: DragSourceMonitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  })\n\n  React.useEffect(() => {\n    preview(getEmptyImage(), { captureDraggingState: true })\n  }, [])\n\n  drag(drop(ref));\n\n  const opacity = (isDragging || withDragging) ? 0.5 : 1;\n\n  return (\n    <div ref={ref} style={{ opacity }}>\n      <Card type={type} />\n    </div>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { card, cardSortEvent } from '../../types/card'\nimport Card from './Card'\nimport SortableCard from './SortableCard'\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex: 1;\n  font-size: 0;\n`\n\ntype Props = {\n  cards: Array<card>,\n}\n\ntype SortProps = {\n  draggingIndex: number\n} & cardSortEvent & Props\n\nexport function SortCardList({ cards, draggingIndex, ...props }: SortProps) {\n  return (\n    <Wrapper>\n      {cards.map((val, k) => (\n        <div\n          key={val.index}\n          style={{\n            position: 'relative',\n            opacity: val.temp ? 0.5 : 1,\n          }}\n        >\n          <SortableCard\n            {...props}\n            withDragging={val.index >= draggingIndex}\n            type={val.type}\n            index={k}\n          />\n        </div>\n      ))}\n    </Wrapper>\n  )\n}\n\nexport default function CardList({ cards }: Props) {\n  return (\n    <Wrapper>\n      {cards.map((val, k) => (\n        <div\n          key={k}\n          style={{\n            position: 'relative',\n            left: `${(k + 1) * -0.38}rem`\n          }}\n        >\n          <Card\n            type={val.type}\n          />\n        </div>\n      ))}\n    </Wrapper>\n  )\n}\n","import React from 'react'\nimport { useDrop } from 'react-dnd'\nimport styled from 'styled-components'\n\nimport { card, draggableCard } from '../../types/card'\nimport Card from '../card/Card'\n\nimport playImg from '../../images/play.svg'\nimport GameContext from '../../contexts/GameContext'\nimport { SortCardList } from '../card/CardList'\n\nconst QueueForm = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n`\n\nconst QueueWrapper = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  width: 60%;\n  overflow: auto;\n\n  box-shadow: inset 1px 1px 1px rgba(0, 0, 0, .5);\n  border-radius: 100rem;\n\n  padding-top: .5rem;\n  padding-bottom: .5rem;\n  padding-left: .8rem;\n  padding-right: .8rem;\n\n  margin-right: 1rem;\n\n  background: #72d4c7;\n`\n\nconst Queue = styled.div`\n  flex: 1;\n  font-size: 0;\n`\n\nconst PlayBtn = styled.div`\n  position: relative;\n  z-index: 2;\n  width: 3.5rem;\n  height: 3.5rem;\n  border-radius: 50%;\n  font-size: 0;\n\n  &:before {\n    position: absolute;\n    z-index: -1;\n    left: 0;\n    bottom: -.25rem;\n    width: 100%;\n    height: 100%;\n\n    border-radius: 50%;\n\n    background: #db7e19;\n    content: '';\n  }\n`\n\nconst PlayBtnWrapper = styled.div<{pushing: boolean}>`\n  position: relative;\n  bottom: ${props => props.pushing ? '-0.25rem' : '0'};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 100%;\n  height: 100%;\n\n  background: #f6941b;\n  border-radius: 50%;\n\n  transition: 150ms ease;\n\n  img {\n    width: 30%;\n  }\n`\n\nexport default function QueueControl() {\n  const {\n      queue,\n      tempQueue,\n      draggingIndex,\n      addQueue, \n      updateQueue,\n      deleteQueue,\n      replaceQueue,\n      changeDraggingIndex,\n      reSortSetQueue\n  } = React.useContext(GameContext)\n  const [pushing, setPushing] = React.useState(false)\n\n  const [{ hovered, item }, drop] = useDrop({\n    accept: \"card\",\n    drop(item: draggableCard, monitor) {\n      reSortSetQueue(queue)\n      return undefined\n    },\n\n    collect: (monitor) => ({\n      hovered: monitor.isOver(),\n      item: monitor.getItem()\n    }),\n  })\n\n  React.useEffect(() => {\n    if (!tempQueue && hovered) {\n      addQueue(item.data.type, true)\n    } else if (tempQueue && !hovered) {\n      deleteQueue(tempQueue.index);\n    }\n  }, [item, addQueue, deleteQueue, tempQueue, hovered])\n\n  return (\n    <QueueForm>\n      <QueueWrapper>\n        <Card type=\"start\" />\n        <Queue ref={drop}>\n          <SortCardList\n            draggingIndex={draggingIndex}\n            cards={[...queue, {\n              type: 'temp',\n              index: queue.length,\n              temp: false,\n            }]}\n            updateCard={(index: number) => {\n              if (tempQueue) {\n                replaceQueue(tempQueue.index, index)\n              }\n            }}\n            dropCard={() => reSortSetQueue(queue)}\n            changeDraggingIndex={changeDraggingIndex}\n            moveCard={replaceQueue}\n            addingCard={(index: number) => {}}\n          />\n        </Queue>\n      </QueueWrapper>\n      <PlayBtn\n        onTouchStart={() => setPushing(true)}\n        onTouchEnd={() => setPushing(false)}\n      >\n        <PlayBtnWrapper pushing={pushing}>\n          <img src={playImg} alt=\"play\" />\n        </PlayBtnWrapper>\n      </PlayBtn>\n    </QueueForm>\n  )\n}\n","import React from \"react\";\nimport styled from 'styled-components'\n\nimport { useDrop } from 'react-dnd'\n\nimport { card, cardType, draggableCard } from \"../../types/card\";\n\nimport DraggableCard from \"../card/DraggableCard\";\nimport QueueControl from \"./QueueControl\";\nimport GameContext from \"../../contexts/GameContext\";\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  align-items: center;\n  width: 100%;\n`\n\nconst QueueControlWrapper = styled.div`\n  \n  width: 100%;\n  bottom: 100%;\n`\n\nconst ItemWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  box-shadow: inset 0px 1px 1px rgba(0, 0, 0, .5);\n\n  width: 100%;\n  padding-top: .5rem;\n  padding-bottom: .5rem;\n  background: #48baa4;\n\n  & > div {\n    margin-left: .2rem;\n    margin-right: .2rem;\n  }\n`\n\nconst usingCards: Array<cardType> = [\"go\", \"left-rotate\", \"right-rotate\"]\n\nexport default function Control() {\n  const { deleteNextQueue } = React.useContext(GameContext)\n  const [, drop] = useDrop({\n    accept: \"sortCard\",\n    drop(item: draggableCard) {\n      deleteNextQueue(item.index);\n      return undefined\n    },\n  })\n\n  return (\n    <Wrapper>\n      <QueueControlWrapper>\n        <QueueControl />\n      </QueueControlWrapper>\n      <ItemWrapper ref={drop}>\n        {usingCards.map((card, k) => (\n          <DraggableCard\n            val={k}\n            type={card}\n            key={k}\n          />\n        ))}\n      </ItemWrapper>\n    </Wrapper>\n  )\n}","import React from 'react'\nimport { XYCoord, useDragLayer } from 'react-dnd'\nimport GameContext from '../../contexts/GameContext'\nimport Card from '../card/Card'\nimport CardList from '../card/CardList'\n\nconst layerStyles: React.CSSProperties = {\n  position: 'fixed',\n  pointerEvents: 'none',\n  zIndex: 100,\n  left: 0,\n  top: 0,\n  width: '100%',\n  height: '100%',\n}\n\nfunction getItemStyles(\n  initialOffset: XYCoord | null,\n  currentOffset: XYCoord | null,\n  isSnapToGrid: boolean,\n) {\n  if (!initialOffset || !currentOffset) {\n    return {\n      display: 'none',\n    }\n  }\n\n  let { x, y } = currentOffset\n\n  const transform = `translate(${x}px, ${y}px)`\n\n  return {\n    transform,\n    WebkitTransform: transform,\n  }\n}\n\nexport interface CustomDragLayerProps {\n  snapToGrid: boolean\n}\n\nexport const CustomDragLayer: React.FC<CustomDragLayerProps> = (props) => {\n  const { queue, draggingIndex } = React.useContext(GameContext)\n\n  const {\n    itemType,\n    isDragging,\n    item,\n    initialOffset,\n    currentOffset,\n  } = useDragLayer((monitor) => ({\n    item: monitor.getItem(),\n    itemType: monitor.getItemType(),\n    initialOffset: monitor.getInitialSourceClientOffset(),\n    currentOffset: monitor.getSourceClientOffset(),\n    isDragging: monitor.isDragging(),\n  }))\n\n  function renderItem() {\n    switch (itemType) {\n      case \"card\":\n        return <Card type={item.data.type} />\n      case \"sortCard\":\n        return <CardList cards={queue.filter(x => x.index >= draggingIndex)} />\n      default:\n        return null\n    }\n  }\n\n  if (!isDragging) {\n    return null\n  }\n  return (\n    <div style={layerStyles}>\n      <div\n        style={getItemStyles(initialOffset, currentOffset, props.snapToGrid)}\n      >\n        {renderItem()}\n      </div>\n    </div>\n  )\n}\n","import React from \"react\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { TouchBackend } from \"react-dnd-touch-backend\";\nimport styled from 'styled-components'\nimport GameContext, { GameContextProvider } from \"../contexts/GameContext\";\nimport Map from './game/Map'\nimport BluetoothButton from \"./game/BluetoothButton\";\n\nimport Control from \"./game/Control\";\nimport { CustomDragLayer } from \"./game/CustomDragLayer\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  width: 100%;\n  height: 100%;\n\n  background: #99eadf;\n`\n\nconst MapWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  width: 100%;\n`\n\nconst ControlWrapper = styled.div`\n  width: 100%;\n`\n\nconst StatusBar = styled.div`\n  position: absolute;\n  right: 1rem;\n  top: 1rem;\n`\n\nfunction GamePlay() {\n  const { page } = React.useContext(GameContext)\n  return (\n    <>\n      {\n        page === \"game\" &&\n        <Wrapper>\n          <MapWrapper>\n            <StatusBar>\n              <BluetoothButton />\n            </StatusBar>\n            <Map />\n          </MapWrapper>\n          <ControlWrapper>\n            <Control />\n          </ControlWrapper>\n        </Wrapper>\n      }\n    </>\n  )\n}\n\nfunction MapEdit() {\n  const { page } = React.useContext(GameContext)\n\n  return (\n    <>\n      {\n        page === \"mapEdit\" &&\n        <Wrapper>\n          <MapWrapper>\n            <StatusBar>\n              <BluetoothButton />\n            </StatusBar>\n            <Map />\n          </MapWrapper>\n          <ControlWrapper>\n            <Control />\n          </ControlWrapper>\n        </Wrapper>\n      }\n    </>\n  )\n}\n\nexport default function Game() {\n\n  return (\n    <GameContextProvider>\n      <DndProvider backend={TouchBackend}>\n        <CustomDragLayer snapToGrid={false} />\n        <GamePlay />\n        <MapEdit />\n      </DndProvider>\n    </GameContextProvider>\n  )\n}","import React from 'react';\nimport Game from './components/Game';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}